#!.venv/bin/python3
import numpy as np
from matplotlib import pyplot as plt
import matplotlib.animation
from utils import Simulation
from time import sleep
import subprocess

#a = np.random.rand(2000, 3)*10
#t = np.array([np.ones(100)*i for i in range(20)]).flatten()
#df = pd.DataFrame({"time": t ,"x" : a[:,0], "y" : a[:,1], "z" : a[:,2]})

global i
i = 0
positions = np.loadtxt("positions.txt")

def main():

    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    title = ax.set_title('3D Test')
    ax.axes.set_xlim3d(left=-15,right=15)
    ax.axes.set_ylim3d(bottom=-15,top=15)
    ax.axes.set_zlim3d(bottom=-15,top=15)


    sim = Simulation(3,3,3)

    

    data = positions[i*9:(i+1)*9]
    graph=ax.scatter(data[:,0], data[:,1], data[:,2])
    dt=.01

    def update_graph(num):
        global i
        i+=1
        data = positions[i*9:(i+1)*9]
        graph._offsets3d = (data[:,0], data[:,1], data[:,2])

    ani = matplotlib.animation.FuncAnimation(fig, update_graph, 2000, 
                                interval=100, blit=False)

    plt.show()


main()
